notes-between-pcs:

I've gotten the typeahead dropdown to work. Specifically, use the append-to-body attribute
<typeahead ... append-to-body>
</typeahead>

Here's copy+paste of the Music.vue file:

<template>
  <div id="music">
    <music-player/>

    <label for="input-5">Users of Github:</label>
    <input id="input-5" class="form-control" type="text" style="width: 100px;margin-left: 20px;" placeholder="Type to search...">
    <typeahead v-model="model" target="#input-5" :async-function="queryFunction" item-key="login" append-to-body>
      <template slot="item" slot-scope="props">
        <li v-for="item in props.items" v-bind:key="item.id">
          <a role="button" @click="props.select(item)">
            <img width="22px" height="22px" :src="item.avatar_url + '&s=40'">
            <span v-html="props.highlight(item)"></span>
          </a>
        </li>
      </template>
    </typeahead>
    <br/>
    <alert v-show="model">You selected {{model}}</alert>
    <!-- button to suggest another song -->
    <input v-model="track_search" placeholder="Track name">
    <div id="track-search">
      <!-- `greet` is the name of a method defined below -->
      <button v-on:click="trackSearch">Search</button>
    </div>
    <p>{{ track_count }}</p>
    <p>{{ api_response }}</p>
    <p>{{ first_track_name }}</p>
  </div>
</template>

<script>
import MusicPlayer from '@/components/MusicPlayer.vue'
import axios from 'axios'

/* TODO: 
1. Setup
  a. 'login' to spotify as paul
  b. get collab playlist i've already created

2. Features
  a. have ability to listen to playlist
  b. have ability to 'suggest another song
*/
export default {
  name: 'music',
  data: function () {
    return {
      track_count: 0,
      track_search: '',
      api_response: '',
      first_track_name: '',
      model: '',
      users: []
    }
  },
  components: {
    MusicPlayer
  },
  methods: {
    queryFunction (query, done) {
        axios.get('https://api.github.com/search/users?q=' + query)
          .then(res => {
            this.users = res.data.items
            done(res.data.items)
          })
          .catch(err => {
            // any error handler
            alert(err)
          })
      },
     trackSearch: function () {
      // `this` inside methods points to the Vue instance
      // alert('track name ' + this.track_search)
      axios.get("api/track/" + this.track_search)
      .then((response)  =>  {
        this.track_count = response.data.tracks.total
        this.api_response = 'good'
        this.first_track_name = response.data.tracks.items[0].name
        alert(this.track_count + ',' + this.api_response + '.' + this.first_track_name)
      }, (error)  =>  {
        this.track_search = 'oh shit' + error
      }) 
    }
  }
}
</script>

<style lang="scss">
</style>
